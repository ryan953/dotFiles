# Remap the prefix so it's easier to use. Works well when OSX has Caps-Lock set to trigger Control
unbind C-b
set -g prefix C-a

set -g default-terminal "screen-256color"

# Use a faster escape-time to avoid messing with vim
set -s escape-time 1

# Reference windows starting at one.
# example: `prefix 1`, `prefix 2`, etc
set -g base-index 1

# Reference panes starting at one as well
setw -g pane-base-index 1

# Fix copy & paste & starting new programs from inside tmux
if-shell 'test "$(uname)" = "Darwin"' 'set-option -g default-command "reattach-to-user-namespace -l bash"'
if-shell 'test "$(uname)" = "Darwin"' 'bind C-c run "tmux show-buffer | reattach-to-user-namespace pbcopy"'
if-shell 'test "$(uname)" = "Darwin"' 'bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"'

set -g mode-keys vi

# Activity
setw -g monitor-activity on
set -g visual-activity on

# Use "prefix r" to reload the tmux config
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# COLORS
set -g status-fg colour250
set -g status-bg colour236
# set -g window-status-fg color250
# set -g window-status-bg color236
set -g window-status-attr dim
set -g window-status-current-fg white
set -g window-status-current-bg colour22
set -g window-status-current-attr bright

set -g pane-border-fg colour236
set -g pane-border-bg colour236
set -g pane-active-border-fg colour22
set -g pane-active-border-bg colour22

set -g message-fg white
set -g message-bg black
set -g message-attr bright

# Statusbar content
set -g status-justify left
set -g status-left-length 80
set -g status-left "#[fg=white attr=dim] #S #[bg=colour234]  #[bg=colour236] Pane: #P #[bg=colour234]  "
set -g status-right-length 100
set -g status-right "#T"
# set -g status-utf8 on

# Use the mouse for seleting windows, panes, and scrolling
# set -g mouse off

# Let "Ctrl+a", which is the prefix, go to running programs
bind C-a send-prefix

# Vim style pane navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Vim style window navigation `prefix ctrl+h` for prev, `prefix crtl+l` for next
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Vim style pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Arrow-key style pane navigation
bind Left select-pane -L
bind Down select-pane -D
bind Up select-pane -U
bind Right select-pane -R

# Arrow-key style window navigation
bind -r C-Left select-window -t :-
bind -r C-Right select-window -t :+

# Arrow-key style pane resizing
bind -r S-Left resize-pane -L 5
bind -r S-Down resize-pane -D 5
bind -r S-Up resize-pane -U 5
bind -r S-Right resize-pane -R 5

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

run-shell "bash ~/.tmux_versions.sh"
