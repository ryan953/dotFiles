[user]
	# name = Ryan Albrecht
	# email = ryan@ryanalbrecht.ca
	useConfigOnly = true

[include]
	path = ~/.gitconfig.local

[help]
	autocorrect = 1

[core]
	editor = vim
	excludesfile = ~/.gitignore

[fetch]
	prune = true

[color]
	branch = auto
	diff = auto
	status = auto

[pager]
	diff = diff-so-fancy | less --tabs=4 -RFX --pattern '^(Date|added|deleted|modified): '
	log = diff-so-fancy | less --tabs=4 -RFX
	show = diff-so-fancy | less --tabs=4 -RFX --pattern '^(Date|added|deleted|modified): '

[branch]
	# rebase during `git pull` instead of making merge commits
	autosetuprebase = always
	# setup tracking by automaticall implying `--track` for `git checkout -b` and `git branch`
	autosetupmerge = always

[push]
	default = current

[diff]
	noprefix = true
	algorithm = patience
	; mnemonicprefix = true
	# Beta heuristic to make add/remove boundaries try to start at blank lines
	compactionHeuristic = true

[interactive]
	diffFilter = diff-highlight

[alias]
	st = status
	co = checkout
	pullr = pull --rebase
	reauthor = commit --amend --reset-author --no-edit
	# reauthor = !sh -c 'eval `git log --reverse --topo-order --pretty=format:\"git cherry-pick %H &&  git commit --amend -C %H --author=\\\"%aN <%aE>\\\" && \" $0 ` "echo success" '
	review = !GIT_CURRENT_BRANCH=$(git name-rev --name-only HEAD) && git log -p origin/$GIT_CURRENT_BRANCH..$GIT_CURRENT_BRANCH
	tree = log --all --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)<%an>%Creset'
	files = diff-tree --no-commit-id --name-only -r HEAD
	sha = rev-parse --short
