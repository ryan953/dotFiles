[user]
  # Skip global user settings...
	# name =
	# email =

  # I prefer per-repo settings and env-vars
  # export GIT_AUTHOR_NAME="Christian Weiske"
  # export GIT_AUTHOR_EMAIL=foo@example.org
  # export GIT_COMMITTER_NAME="$GIT_AUTHOR_NAME"
  # export GIT_COMMITTER_EMAIL="$GIT_AUTHOR_EMAIL"

[include]
  path = ~/.gitconfig.local

[help]
  autocorrect = 1

[core]
  editor = vim
  excludesfile = ~/.gitignore
  pager = delta

[color]
  branch = auto
  diff = auto
  status = auto

[interactive]
  diffFilter = delta --color-only

[delta]
  features = line-numbers
  whitespace-error-style = 22 reverse
  syntax-theme = TwoDark
  navigate = true
  tabs = 2
  diff-so-fancy = true
  file-style = bold purple
  file-decoration-style = purple ul
  hunk-header-style = syntax file line-number
  hunk-header-decoration-style = purple
  line-numbers-left-format = {nm:^4}
  line-numbers-right-format = {np:^4}
  # plus-style = normal bold
  # plus-emph-style = normal 22 bold
  # minus-style = normal
  # minus-emph-style = normal auto

[branch]
  # rebase during `git pull` instead of making merge commits
  autosetuprebase = always
  # setup tracking by automaticall implying `--track` for `git checkout -b` and `git branch`
  autosetupmerge = always

[pull]
  rebase = false

[push]
  default = current

[diff]
  noprefix = true
  algorithm = patience
  ; mnemonicprefix = true
  # Beta heuristic to make add/remove boundaries try to start at blank lines
  compactionHeuristic = true

[alias]
  st = status
  co = checkout
  pullr = pull --rebase
  reauthor = commit --amend --reset-author --no-edit
  # reauthor = !sh -c 'eval `git log --reverse --topo-order --pretty=format:\"git cherry-pick %H &&  git commit --amend -C %H --author=\\\"%aN <%aE>\\\" && \" $0 ` "echo success" '
  review = !GIT_CURRENT_BRANCH=$(git name-rev --name-only HEAD) && git log -p origin/$GIT_CURRENT_BRANCH..$GIT_CURRENT_BRANCH
  tree = !GIT_PAGER='less -FX' git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)<%an>%Creset'
  treea = !GIT_PAGER='less -FX' git log --all --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)<%an>%Creset'
  files = diff-tree --no-commit-id --name-only -r HEAD
  count-lines = "! git log --author=\"$1\" --pretty=tformat: --numstat | awk '{ add += $1; subs += $2; loc += $1 - $2 } END { printf \"added lines: %s, removed lines: %s, total lines: %s\\n\", add, subs, loc }' #"

[rebase]
	updateRefs = true
